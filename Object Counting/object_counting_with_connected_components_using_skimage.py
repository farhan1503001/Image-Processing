# -*- coding: utf-8 -*-
"""Object Counting with  Connected Components Using SKimage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OrwhEXrTNhNi_JeCPYdBNrcBm0Zfnl5K
"""

import skimage
from skimage.io import imread,imshow
from skimage.color import rgb2gray
from skimage.morphology import erosion,dilation,area_closing,area_opening
from skimage.measure import label,regionprops
import pandas as pd
import matplotlib.pyplot as plt

def read_image(path):
  rbc_img=imread(path)
  print("Image type: ",type(rbc_img))
  return rbc_img

def show_image(file):
  imshow(file)

def image_binarize(image):
  im=rgb2gray(image)
  im2=im<0.44
  show_image(im2)
  return im2

def morph_operation(image):
  """
  Here the target is to make blood cell blobs entirely white
  """
  im_morph=area_closing(area_opening(image,170),170)
  show_image(im_morph)
  return im_morph

def extract_feature_each_blob(m_image):
  """
  Here we will use label to label to label the image
  and measure.regionprops tpo find the area
  """
  label_imp=label(m_image)
  imshow(label_imp)
  regions=skimage.measure.regionprops(label_imp)

  properties=['area','centroid','convex_area','bbox','eccentricity']

  dataframe=pd.DataFrame(skimage.measure.regionprops_table(label_imp,properties=properties))
  print(dataframe.head())
  return label_imp,regions,dataframe

def show_regionprops_hist(df):
  plt.hist(df['area'],bins=len(df))

def make_area_list(labelled_image):
  """
  Takes a labelled image and finds out the area_list and minimum area
  """
  properties=skimage.measure.regionprops(labelled_image)
  area_list=[]
  for prop in properties:
    area_list.append(prop.area)

  return area_list,min(area_list)

def plotting_areas(list_area):
  plt.hist(list_area,bins=50)

def counting_objects(image,labelled_image,image_properties):
  """
  we will filter out the areas of blobs with image size less than minimum area
  """
  fig, ax = plt.subplots(figsize=(18, 8))
  ax.imshow(image)
  count = 0
  for i,prop in enumerate(filter(lambda x:x.area>207,image_properties)):
    y1,x1,y2,x2=(prop.bbox[0],prop.bbox[1],prop.bbox[2],prop.bbox[3])

    width=x2-x1
    height=y2-y1
    r=plt.Rectangle((x1,y1),width=width,height=height,color='b',fill=False)

    ax.add_patch(r)

    count=count+1
  print("Number of detected objects: ",count)

  return count

"""# Running Portion"""

image=read_image('/content/drive/MyDrive/tinyparts_images/WIN_20230808_09_54_54_Pro.jpg')

show_image(image)

ax=plt.hist(rgb2gray(image).ravel(),bins=256)
plt.show()

bin_img=image_binarize(image)

morph_img=morph_operation(bin_img)

label_img,regions,df=extract_feature_each_blob(morph_img)
print(len(df))

show_regionprops_hist(df)

area,min_area=make_area_list(label_img)

plotting_areas(area)

counting_objects(image,label_img,regions)